---
- hosts: 127.0.0.1 
  connection: local
  sudo: true
  tasks:

  - name: vim
    yum: name=vim state=latest

  #########################################
  # zeromq                                #
  #########################################
  # setup zeromq and all the crap needed
  # for installing pyzmq later
  - name: zeromq dependencies
    yum: name={{item}} state=latest
    with_items:
      - zeromq
      - git
      - svn
      - cpp
      - make
      - autoconf
      - automake
      - patch
      - cmake
      - wget
      - mlocate
      - rpm-build
      - gcc-c++
      - uuid-devel
      - pkgconfig 
      - libtool
      - python-devel
      - openpgm


  #########################################
  # Python - install and configure stuff  #
  #          needed for running python    #
  #          projects                     #
  #########################################

  # Python 2.7 is already installed in centos7, but pip is not:
  - easy_install: name=pip
  # # now setup all our required python dependencies:
  - pip: requirements=/usr/local/src/python/requirements.txt

  #######################################
  # Golang - install and configure go   #
  #          stuff need for running go  #
  #          projects                   #
  #######################################

  # For reference purposes ...
  # Some useful commands (used while building ansible script)...
  #
  # vagrant destroy
  # vagrant up
  # vagrant ssh
  # cd /vagrant
  # ansible-playbook playbook.yml

  # The ./scratch directory is a working directory that gets deleted at the end of the 
  # playbook

  - name : Make scratch dir
    command : mkdir ./scratch

  # Install Go

  - name: Go download
    command: wget -P ./scratch https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz

  - name: Go Install Go
    command: tar -C /usr/local -xzf ./scratch/go1.6.linux-amd64.tar.gz

  - name: Add Go bin dir to path
    lineinfile: dest=/etc/profile line="export PATH=$PATH:/usr/local/go/bin"


  # Install libsodium library (curve dependency)

  - name : Download libsodium
    command : wget -P ./scratch https://github.com/jedisct1/libsodium/releases/download/1.0.8/libsodium-1.0.8.tar.gz

  - name : Un-tar libsodium 
    command : tar -C ./scratch -xzf ./scratch/libsodium-1.0.8.tar.gz

  - name : Configure libsodium
    command : ./configure
    args:
      chdir: ./scratch/libsodium-1.0.8/

  - name : Make libsodium
    command : make
    args:
      chdir: ./scratch/libsodium-1.0.8/

  - name : Make check libsodium
    command : make check
    args:
      chdir: ./scratch/libsodium-1.0.8/

  - name : Make install libsodium
    command : make install
    args:
      chdir: ./scratch/libsodium-1.0.8/


  # zmqlib installation (with libsodium)

  - name: Download zmqlib
    command: wget -P ./scratch http://download.zeromq.org/zeromq-4.1.4.tar.gz

  - name: Un-tar zmqlib
    command: tar -C ./scratch -xzf ./scratch/zeromq-4.1.4.tar.gz

  - name : Autogen zmqlib
    command : ./autogen.sh
    args:
      chdir: ./scratch/zeromq-4.1.4/

  # The following section creates a buildzmqlib.sh script 
  # There may be a better way to create the script {with_items} but this will do for now
  # The script sets environment variables needed to build the zmqlib
  - name : Create buildzmqlib.sh script
    shell: touch buildzmqlib.sh
    args:
      chdir: ./scratch/zeromq-4.1.4/

  - name: Make buildzmqlib.sh script
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib"'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export sodium_LIBS="-L/usr/local/lib"'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export CPATH=/usr/local/include'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export LIBRARY_PATH=/usr/local/lib'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export LD_RUN_PATH=/usr/local/lib'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export CFLAGS=$(pkg-config --cflags libsodium)'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='export LDFLAGS=$(pkg-config --libs libsodium)'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='./configure --with-libsodium'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='make clean'    

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='make'

  - name: Make buildzmqlib.sh script (cont)
    lineinfile: dest=./scratch/zeromq-4.1.4/buildzmqlib.sh line='make install'

  - name: Run build zmqlib 
    command: sh buildzmqlib.sh 
    args:
      chdir: ./scratch/zeromq-4.1.4/

  # The following section creates a build-go-artifacts.sh script 
  # This script has necesary environment variables set to build the 
  # Go project artifacts
  - name : Create build-go-artifacts.sh script
    shell: touch build-go-artifacts.sh
    args:
      chdir: ./scratch/

  - name: Create build-go-artifacts.sh script (cont)
    lineinfile: dest=./scratch/build-go-artifacts.sh line='export PATH=$PATH:/usr/local/go/bin'

  - name: Create build-go-artifacts.sh script (cont)
    lineinfile: dest=./scratch/build-go-artifacts.sh line='export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig'

  - name: Create build-go-artifacts.sh script (cont)
    lineinfile: dest=./scratch/build-go-artifacts.sh line='export GOPATH=/vagrant/src/go'

  - name: Create build-go-artifacts.sh script (cont)
    lineinfile: dest=./scratch/build-go-artifacts.sh line='cd /vagrant/src/go && make go-deps'

  - name: Create build-go-artifacts.sh script (cont)
    lineinfile: dest=./scratch/build-go-artifacts.sh line='cd /vagrant/src/go && make'

  - name: Create build-go-artifacts.sh script (cont)
    lineinfile: dest=./scratch/build-go-artifacts.sh line='touch /vagrant/src/go/src/github.com/redsofa/collector/main/config.json'

  - name: Create build-go-artifacts.sh script (cont)
    lineinfile: dest=./scratch/build-go-artifacts.sh line='touch /vagrant/src/go/src/github.com/redsofa/soundtouch/main/config.json'

  - name: Run build-go-artifacts.sh
    command: sh build-go-artifacts.sh
    args:
      chdir: ./scratch/

  - name : Delete scratch directory 
    file: path=./scratch state=absent

  - name: Add $PKG_CONFIG_PATH env var in /etc/profile 
    lineinfile: dest=/etc/profile line="export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig"

  - name: Add GOPATH env var to /etc/profile 
    lineinfile: dest=/etc/profile line='export GOPATH=/vagrant/src/go'

  #TODO add source .bash_profile as instruction once ansible finished.. or re-login
